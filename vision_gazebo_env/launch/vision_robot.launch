<launch>

    <env name="GAZEBO_MODEL_PATH" value="$(find vision_gazebo_env)/model"/>
    
    <arg name="model" default="$(find realsense_ros_gazebo)/urdf/test.xacro"/>
  
    <!-- spawn urdf model to gazebo -->
    <!-- param name="robot_description2" command="$(find xacro)/xacro $(arg model)" />
    <node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-x -0.15 -y 0 -z 0.18 -unpause -urdf -model test_model -param robot_description2" respawn="false" output="screen" /-->
    
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_model)/urdf/robot_camera.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-x 0 -y 0 -z 0.5 -pause -urdf -model robot_model -param robot_description"/>

  
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="use_sim_time" value="true"/>
      <arg name="debug" value="false"/>
      <arg name="world_name" value="$(find vision_gazebo_env)/model/worlds/no_cylinder.world"/>
    </include>
  
    <!-- state publishers -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    
    <!-- start rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find vision_gazebo_env)/rviz/image.rviz" required="true" />
  </launch>
  